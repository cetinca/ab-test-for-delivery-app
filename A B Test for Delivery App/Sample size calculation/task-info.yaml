type: edu
files:
- name: main.py
  visible: true
  text: '# write your code here'
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest import *
    import re

    dict_answers_CORRECT = {
        "samplesize": 400,
        "controlgroup": 400,
        "experimentalgroup": 400
    }


    class SampleSize(StageTest):
        @dynamic_test
        def test(self):
            pr = TestedProgram()
            output = pr.start().replace(" ", "").lower()

            if len(output.rstrip()) == 0:
                raise WrongAnswer("Seems like your program does not show any output.")

            output_splitted = output.split("\n")
            # let's remove all empty lines from user's output
            output_splitted = [line for line in output_splitted if line.strip() != ""]

            if len(output_splitted) != 3:
                raise WrongAnswer(f"Wrong number of non-empty lines in the output of you program.\n"
                                  f"Expected 3, found {len(output_splitted)}.\n"
                                  f"Check the output format in the Examples section.")
            for key_word in ["Sample size", "Control group", "Experimental group"]:
                key_word_raw = key_word.replace(" ", "").lower()
                # check that a key word occurs only once
                if output.count(key_word_raw) != 1:
                    raise WrongAnswer(f"Substring \"{key_word}\" should occur once in the output of your program.\n"
                                      f"Found {output.count(key_word_raw)} occurrences.")
                # check the value related to the key word (size of a group)
                answer_user = re.search(f'{key_word_raw}:([+-]?(?:[0-9]*[.])?[0-9]+)', output)
                if answer_user is None:
                    raise WrongAnswer(f"Didn't find the value for {key_word.lower()}.\n"
                                      f"Note that you should present its value in the following format:\n"
                                      f"    \"{key_word}: <calculated value>\"")
                if float(answer_user.group(1)) != dict_answers_CORRECT[key_word_raw]:
                    raise WrongAnswer(f"The value for {key_word.lower()} is wrong.")

            else:
                return CheckResult.correct()


    if __name__ == '__main__':
        SampleSize().run_tests()
  learner_created: false
- name: aa_test.csv
  visible: true
  text: |
    Sample 1,Sample 2
    38.74,42.74
    34.79,38.79
    43.83,47.83
    38.82,42.82
    36.84,40.84
    32.44,36.44
    35.15,39.15
    40.57,44.57
    33.29,37.29
    33.35,37.35
    32.73,36.73
    35.36,39.36
    30.56,34.56
    34.99,38.99
    25.8,29.8
    28.92,32.92
    38.05,42.05
    36.96,40.96
    35.1,39.1
    35.03,39.03
    31.34,35.34
    37.9,41.9
    37.1,41.1
    27.31,31.31
    38.07,42.07
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/18074#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Sun, 30 Oct 2022 10:26:08 UTC"
record: 2
